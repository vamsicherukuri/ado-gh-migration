# Copyright (c) 2025 Vamsi Cherukuri, Microsoft
# 
# MIT License
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# ADO2GH Step 5: Reclaim Mannequins
# 
# Description:
#   This script reclaims mannequin users (placeholder accounts) by mapping them
#   to actual GitHub user accounts. The mannequins CSV should be updated with
#   target GitHub usernames before running this script.
#
# Prerequisites:
#   - GH_PAT environment variable set (GitHub Personal Access Token)
#   - Script 4 (4_generate_mannequins.ps1) has been run to generate mannequins.csv
#   - Mannequins CSV has been reviewed and updated with target GitHub usernames
#   - migration-config.json exists with proper configuration
#
# Usage:
#   .\5_reclaim_mannequins.ps1
#   .\5_reclaim_mannequins.ps1 -ConfigPath "custom-config.json"
#   .\5_reclaim_mannequins.ps1 -MannequinsCSV "custom-mannequins.csv"
#
# Order of Operations:
#   [1/4] Validate GitHub PAT token
#   [2/4] Load migration configuration from JSON
#   [3/4] Validate mannequins CSV file exists and contains data
#   [4/4] Execute mannequin reclaim using gh ado2gh CLI
#
# Input Files:
#   - mannequins.csv (generated by 4_generate_mannequins.ps1, updated with target users)
#   - migration-config.json (contains GitHub org and CSV path configuration)

param(
    [string]$ConfigPath = "migration-config.json",
    [string]$MannequinsCSV = ""  # Optional override
)

# Import helper module
$scriptPath = Split-Path -Parent $MyInvocation.MyCommand.Path
Import-Module "$scriptPath\MigrationHelpers.psm1" -Force -ErrorAction Stop

Write-Host "`n========================================" -ForegroundColor Cyan
Write-Host "  Step 5: Reclaim Mannequins" -ForegroundColor Cyan
Write-Host "========================================`n" -ForegroundColor Cyan

# 1. CHECK PAT TOKEN
Write-Host "[1/4] Checking GitHub PAT token..." -ForegroundColor Yellow
if (!(Test-RequiredPATs -ADORequired $false -GitHubRequired $true)) { exit 1 }

# 2. LOAD CONFIGURATION
Write-Host "`n[2/4] Loading configuration..." -ForegroundColor Yellow
$config = Get-MigrationConfig -ConfigPath $ConfigPath
if (!$config) { exit 1 }

$GITHUB_ORG = $config.githubOrganization

# Use parameter override if provided, otherwise use config
if ([string]::IsNullOrEmpty($MannequinsCSV)) {
    $CSV_FILE = $config.scripts.reclaimMannequins.inputCSV
} else {
    $CSV_FILE = $MannequinsCSV
}

Write-Host "GitHub Organization: $GITHUB_ORG" -ForegroundColor Gray
Write-Host "Mannequins CSV: $CSV_FILE" -ForegroundColor Gray

# 3. VALIDATE CSV FILE
Write-Host "`n[3/4] Validating CSV file..." -ForegroundColor Yellow

if (-not (Test-Path -LiteralPath $CSV_FILE)) {
    Write-Host "‚ùå Error: CSV file '$CSV_FILE' not found!" -ForegroundColor Red
    Write-Host "`nüí° Please run 4_generate_mannequins.ps1 first to generate the CSV file." -ForegroundColor Blue
    exit 1
}

try {
    $csvRows = Import-Csv -LiteralPath $CSV_FILE
    
    if ($csvRows.Count -eq 0) {
        Write-Host "‚ö†Ô∏è  No mannequins found in CSV file to reclaim." -ForegroundColor Yellow
        Write-Host "`nüìã This may mean:" -ForegroundColor Cyan
        Write-Host "   - All users already exist in GitHub" -ForegroundColor White
        Write-Host "   - No user mapping is required" -ForegroundColor White
        Write-Host "   - You can proceed to the next step" -ForegroundColor White
        Write-Host "`n‚úÖ No action needed - continuing to next step" -ForegroundColor Green
        exit 0
    }
    
    Write-Host "‚úÖ Found $($csvRows.Count) mannequin(s) to process" -ForegroundColor Green
    
    # Display preview of mannequins to be reclaimed
    Write-Host "`nüìã Preview of mannequins to reclaim:" -ForegroundColor Cyan
    $previewCount = [Math]::Min(5, $csvRows.Count)
    for ($i = 0; $i -lt $previewCount; $i++) {
        $row = $csvRows[$i]
        Write-Host "   - Mannequin: $($row.'mannequin-user') ‚Üí Target: $($row.'target-user')" -ForegroundColor Gray
    }
    if ($csvRows.Count -gt 5) {
        Write-Host "   ... and $($csvRows.Count - 5) more" -ForegroundColor Gray
    }
    
} catch {
    Write-Host "‚ùå Failed to read CSV file: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

# 4. RECLAIM MANNEQUINS
Write-Host "`n[4/4] Reclaiming mannequins..." -ForegroundColor Yellow
Write-Host "   This may take several minutes depending on the number of mannequins..." -ForegroundColor Gray

$ErrorActionPreference = 'Stop'

try {
    # Execute mannequin reclaim using gh ado2gh CLI
    # Note: Use "--skip-invitation" flag to avoid sending invitations (for EMUs only)
    gh ado2gh reclaim-mannequin --github-org $GITHUB_ORG --csv $CSV_FILE
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "`n‚úÖ Mannequin reclaiming completed successfully!" -ForegroundColor Green
        
        Write-Host "`n========================================" -ForegroundColor Cyan
        Write-Host "  Reclaim Complete" -ForegroundColor Cyan
        Write-Host "========================================" -ForegroundColor Cyan
        
        Write-Host "`nüìä Summary:" -ForegroundColor Cyan
        Write-Host "   Total mannequins processed: $($csvRows.Count)" -ForegroundColor White
        Write-Host "   GitHub Organization: $GITHUB_ORG" -ForegroundColor White
        
        Write-Host "`nüí° What happened:" -ForegroundColor Blue
        Write-Host "   - Mannequin placeholder accounts have been reclaimed" -ForegroundColor White
        Write-Host "   - Contributions are now attributed to the correct GitHub users" -ForegroundColor White
        Write-Host "   - User history has been preserved in the migrated repositories" -ForegroundColor White
        
        Write-Host "`nüìã NEXT STEPS:" -ForegroundColor Cyan
        Write-Host "   1. Run: .\6_rewire_pipelines.ps1" -ForegroundColor White
        Write-Host "   2. Run: .\7_integrate_boards.ps1" -ForegroundColor White
        Write-Host "   3. Run: .\8_disable_ado_repos.ps1" -ForegroundColor White

        exit 0
    } else {
        Write-Host "`n‚ùå Failed to reclaim mannequins" -ForegroundColor Red
        Write-Host "`nüí° Troubleshooting:" -ForegroundColor Yellow
        Write-Host "   - Verify the target GitHub users exist in the organization" -ForegroundColor White
        Write-Host "   - Check that the CSV file has been properly updated with target users" -ForegroundColor White
        Write-Host "   - Ensure you have proper permissions in the GitHub organization" -ForegroundColor White
        exit 1
    }
} catch {
    Write-Host "`n‚ùå Error during mannequin reclaiming: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}
